// Note: brjsPath is set in gradle.properties
// 
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'java'

dependencies {
	compile fileTree(dir:brjsPath, include:"sdk/libs/java/system/*.jar")
}

task copyToConf, type: Copy, dependsOn: jar, {
	def brjsConfJavaDir = new File("${brjsPath}/conf/java")
	from jar.outputs.files.singleFile
	into brjsConfJavaDir
	doLast {
		println "${project.name} jar copied to ${brjsConfJavaDir.getAbsolutePath()}"
	}
}

task copyToApps, type: Copy, dependsOn: jar, {
	destinationDir file("${brjsPath}/apps")
	file("${brjsPath}/apps").listFiles().each {
		if (it.isDirectory()) {
			into ("${it.name}/WEB-INF/lib") {
				from jar.outputs.files.singleFile
			}
		}
	}
	doFirst {
		fileTree(dir:"${brjsPath}/apps", include:"*/WEB-INF/lib/${project.name}.jar").each { delete it }
	}
	doLast {
		println "${project.name} jar copied to ${brjsPath}/apps/*/WEB-INF/lib"
	}
}

task copyToBrjs, dependsOn: [copyToConf, copyToApps], {
}

task copyToLib, type: Copy, dependsOn: jar, {
	def latestBuildDir = new File("${projectDir}/lib")
	from jar.outputs.files.singleFile
	into latestBuildDir
	doLast {
		println "${project.name} jar copied to ${latestBuildDir.getAbsolutePath()}"
	}
}

// automatically add brjs-core sources jar for Eclipse classpath
tasks.eclipse.doLast {
	try {
		def classPathFile = file(".classpath")
		String brjsCoreJar = fileTree(dir:"${brjsPath}/sdk/libs/java/system", include:"brjs-core-*.jar").singleFile
		String brjsSrcJar = fileTree(dir:"${brjsPath}/sdk/docs/src", include:"brjs-core-*-sources.jar").singleFile
		def findString = "path=\"${brjsCoreJar}\""
		def replaceString = findString + " sourcepath=\"${brjsSrcJar}\""
		if (classPathFile.exists()) {
			classPathFile.write( classPathFile.text.replace(findString, replaceString) )
		}
	} catch (IllegalStateException ex) {  // do nothing with the exception, it was probably thrown because the src jar doesnt exist
		logger.warn("Warning: Exception was thrown when attempting to add the brjs-core src jar to the classpath. Sources will not be added to the Eclipse classpath.")
		logger.debug(ex.toString())
	}
}